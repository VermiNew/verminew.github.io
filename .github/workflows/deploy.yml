name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm install
          npm install terser --save-dev
          npm install sharp --save-dev

      - name: Generate PWA Assets
        run: node scripts/convert-images.js

      - name: Lint
        run: npm run lint

      - name: Type Check
        run: npm run typecheck

      - name: Build
        env:
          VITE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build

      - name: Install Image Optimization Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick
          npm install -g svgo

      - name: Optimize Images
        run: |
          find dist -type f -name "*.png" -exec convert {} -strip -quality 85 {} \;
          find dist -type f -name "*.jpg" -exec convert {} -strip -quality 85 {} \;
          find dist -type f -name "*.jpeg" -exec convert {} -strip -quality 85 {} \;

      - name: Optimize SVGs
        run: |
          find dist -type f -name "*.svg" -exec svgo {} \;

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Save Cache
        uses: actions/cache/save@v3
        with:
          path: |
            dist
            node_modules
          key: ${{ runner.os }}-build-${{ github.sha }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create Deployment Status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const status = ${{ job.status == 'success' }} ? '✅ Deploy successful' : '❌ Deploy failed';
            const url = '${{ steps.deployment.outputs.page_url }}';
            const message = `${status}\nEnvironment: github-pages\nURL: ${url}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: message
            });
