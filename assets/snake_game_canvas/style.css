body {
    font-family: 'Lato', sans-serif;
    background-color: #282c35;
    color: #ffffff;
    margin: 0;
    /* Usunięcie domyślnych marginesów */
    padding: 0;
    /* Usunięcie domyślnego wewnętrznego odstępu */
    overflow-y: hidden;
    min-height: 100vh;
    /* Minimalna wysokość na całą wysokość widoku */
    display: flex;
    flex-direction: column;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
}

@keyframes blinkAnimation {
    from {
        opacity: 1;
    }

    to {
        opacity: 9.5;
    }
}

/* Animacja obramowania dla canvas */
#gameCanvas {
    border: 2px solid #ffffff;
    transition: border 0.3s ease-in-out;
    animation: blinkAnimation 0.5s infinite alternate;
    border-radius: 0.5rem;
    border-width: 5px;
}

#gameCanvas:hover {
    border: 2px solid #3498db;
}

/* Środkowanie canvas na środku ekranu */
main {
    display: flex;
    flex: 1;
    /* Rozciągnij główną część, aby wypełnić dostępną przestrzeń */
    flex-direction: column;
    /* Stack child elements vertically */
    justify-content: center;
    align-items: center;
    height: 100vh;
    /* Adjusted height for full viewport height */
    width: 100%;
    margin: 0;
    align-items: center;
    text-align: center;
}

/* Dodatkowe style dla stopki */
footer {
    font-size: 16px;
    color: white;
    padding: 10px;
    text-align: center;
    width: 100%;
    /* Full width */
    box-sizing: border-box;
    /* Include padding and border in width */
    margin-top: auto;
    /* Ustaw stopkę na samym dole ekranu */
    margin-bottom: 20px;
    /* Dodaj dodatkowy odstęp od dołu */
}

/* Styl dla elementu input typu range */
input[type="range"] {
    appearance: none;
    width: 100%;
    height: 10px;
    background: #333;
    outline: none;
    opacity: 0.7;
    transition: opacity 0.2s;
    margin-top: 5px;
}

input[type="range"]:hover {
    opacity: 1;
}

/* Kolorowy pasek dla input typu range */
input[type="range"]::-webkit-slider-thumb {
    appearance: none;
    width: 15px;
    height: 15px;
    background: #ffffff;
    cursor: pointer;
    border-radius: 50%;
}

input[type="range"]::-moz-range-thumb {
    width: 15px;
    height: 15px;
    background: #ffffff;
    cursor: pointer;
    border-radius: 50%;
}

/* Kolorowy pasek dla input typu range w Firefox */
input[type="range"]::-moz-range-progress {
    background-color: #ffffff;
}

canvas {
    background-color: #ffffff;
    z-index: 9999;
}

/* Styl dla elementu a */
a,
button {
    text-decoration: none;
    color: #3498db;
    transition: color 0.3s ease-in-out;
    background-color: transparent;
}

a:hover,
button {
    color: #ffffff;
}

#showDebugLogButton:hover {
    color: yellow;
    opacity: 1;
}

/* CSS dla popup'u */
.popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #333;
    color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    z-index: 999;
    max-width: 60%;
    text-align: center;
    animation: slideUpDown 0.5s ease-in-out;
}

.popup-header {
    margin-bottom: 15px;
}

@keyframes informationAnimation {
    from {
        color: orange;
    }

    to {
        color: red;
    }
}

.exclamation-mark {
    font-size: 60px;
    color: #f00;
    animation: informationAnimation 0.5s infinite alternate;
}

.popup-content {
    text-align: center;
}

.popup-button {
    background-color: #f00;
    color: #fff;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 5px;
}

.popup-button:hover {
    background-color: white;
    color: blue;
}

@keyframes slideUpDown {
    from {
        transform: translate(-50%, -70%);
        opacity: 0;
    }

    to {
        transform: translate(-50%, -50%);
        opacity: 1;
    }
}

@keyframes slideUp {
    from {
        transform: translate(-50%, -50%);
        opacity: 1;
    }

    to {
        transform: translate(-50%, -70%);
        opacity: 0;
    }
}